---
title: "Git and GitHub: The Basics"
author: "Jonathan Peake"
brand: slides-light-brand.yml
output-dir: ../docs/slides/
format: 
    nmfs-slides-revealjs: 
        title-slide-attributes:
          data-background-image: "styles/horiz-swoop-1.png"
          data-background-color: '{{< brand color dark-blue >}}'
        footer: "U.S. Department of Commerce | National Oceanic and Atmospheric Administration | National Marine Fisheries Service"
        controls: true
        navigation-mode: linear
        transition: slide
        transition-speed: default
        background-transition: none
        scrollable: true
---

## Users, organizations, and teams

::::: columns
::: {.column width="60%" layout="[[-1], [1], [-1]]"}
### Users

-   Your account

-   Connected to your NOAA email

-   Can add secondary email

### 
:::

::: {.column width="40%"}
![](images/paste-27.png)
:::
:::::

## Users, organizations, and teams

::::: columns
::: {.column width="50%" layout="[[-1], [1], [-1]]"}
### Organizations

-   Shared account with large number of people

-   Can be housed under Enterprise

-   Collaboration and controlled access
:::

::: {.column width="50%"}
![](images/paste-28.png)
:::
:::::

## Users, organizations, and teams

::::: columns
::: {.column width="50%" layout="[[-1], [1], [-1]]"}
### Teams

-   Nested within organization

-   Sub-groups for collaboration and access

-   Can have teams within teams for more fine-scale structure
:::

::: {.column width="50%"}
![](images/paste-29.png)
:::
:::::

## Repositories - the main unit

::::: columns
::: column
-   Sets the folder and file structure

-   Contained and permissioned

-   Public, private, or internal (Enterprise)

-   Commits and issues - Contributing through GitHub
:::

::: column
![](images/paste-30.png)
:::
:::::

## Commit

::::: columns
::: column
-   A specific "thing" that you want to save and keep a record for

-   Snapshot of all the files in the entire project

-   Commit messages provide info about the "thing" you've done

-   Commits give a history of the project
:::

::: column
![](images/paste-31.png)
:::
:::::

# Cloning, Forking, Importing, and Branching (oh my!)

## Cloning

::::: columns
::: column
-   Making a local copy from GitHub

-   Allows local sync within and across devices

-   Push local changes, fetch remote changes
:::

::: column
![Image credit: https://jaisriram.hashnode.dev/how-to-clone-a-github-repository-to-local-machine](images/paste-33.png)
:::
:::::

## Forking

::::: columns
::: column
-   Adding to or modifying repository hosted on someone else's account

-   "Sees" changes from parent repo - allows syncing with parent

-   Can be for personal purposes - doesn't have to be pushed to original repo!
:::

::: column
![Image credit: https://www.earthdatascience.org/workshops/intro-version-control-git/pull-request/](images/paste-34.png)
:::
:::::

## Importing

::::: columns
::: column
-   Use another repo as starting point for your own

-   Copy not connected to original

-   Usually meant for importing from a different version control system (e.g., GitLab)

    -   Can be employed to use another GitHub repo as a "pseudo-template"
:::

::: column
![](images/paste-35.png)
:::
:::::

## Branching

-   Copies of repos housed within the repo structure

-   Allow for working on repo without changing main branch

-   Can help for more complex collaboration

![](images/paste-37.png)