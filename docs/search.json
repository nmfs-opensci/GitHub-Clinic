[
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "All times Pacific. Note material marked * is NOAA access restricted.\n\n\n\nTopic\nDescription\nMaterial\nMeeting Links\nRecordings\n\n\n\n\nIntroduction to Git and GitHub\nBasics of git commands, repository management, project management, and collaboration using GitHub\nLink\nMon 4/7\nTues 4/8\nMon 4/14\nTues 4/15\nMon 4/21\nTues 4/22\nMonday 4/7 (not available; issue with recording)\nTuesday 4/8 (Incomplete recording)*\nMonday 4/14*\nTuesday, 4/15*\nMonday, 4/21*\nTuesday, 4/22*\n\n\nMarkdown and README files\nBecome familiar with markdown formatting for README files, issues, Pull Requests, and discussions on GitHub\nTBD\nThurs 5/29\nTues 6/3\n\n\n\nGitHub Pages\nHow to make a website from a GitHub repository using GitHub Pages\nTBD\nThurs 6/12\nTues 6/17\n\n\n\nForks\nForking a repository, how to work with forks, and why we use them\nTBD\nThurs 6/26\nTues 7/1\n\n\n\nBranches and Pull Requests\nCreating a branch, why to use branches, and using pull request to merge changes from branches\nTBD\nThurs 7/10\nTues 7/15\n\n\n\nGit Workflows\nUsing branches to organize and develop workflows in GitHub\nTBD\nThurs 8/7\nTues 8/12\n\n\n\nMerge Conflicts\nWhy merge conflicts occur, how to address them, and best practices to avoid them in the first place\nTBD\nThurs 7/17\nTues 7/29\n\n\n\nIssues\nTypes of issues, assigning issues, and using issue templates\nTBD\nThurs 8/21\nTues 8/26\n\n\n\nProject Management\nUsing GitHub Issues and Projects for project management\nTBD\nThurs 9/4\nTues 9/9\n\n\n\nAdvanced Git\nGit on the command line, advanced features and functions\nTBD\nThurs 9/18\nTues 9/23\n\n\n\nGitHub Actions\nAutomating tasks and workflows using GitHub Actions\nTBD\nThurs 10/1\nTues 10/6",
    "crumbs": [
      "JupyterHub",
      "Welcome",
      "Schedule"
    ]
  },
  {
    "objectID": "content/why_git.html#what-is-git",
    "href": "content/why_git.html#what-is-git",
    "title": "What are Git and GitHub?",
    "section": "What is Git?",
    "text": "What is Git?\n\n\n\nProgram to track file changes and create a history of those changes\nCreates a ‘container’ for a set of files called a repository"
  },
  {
    "objectID": "content/why_git.html#what-is-github",
    "href": "content/why_git.html#what-is-github",
    "title": "What are Git and GitHub?",
    "section": "What is GitHub?",
    "text": "What is GitHub?\n\n\n\nCollaborative software designed to organize files and track changes by different people through time\nBuilt on top of Git\nAllows to sync (clone) Git repositories locally and over the web"
  },
  {
    "objectID": "content/why_git.html#why-use-git-and-github",
    "href": "content/why_git.html#why-use-git-and-github",
    "title": "What are Git and GitHub?",
    "section": "Why use Git and GitHub?",
    "text": "Why use Git and GitHub?\n\nVersion control - for you and others\nCollaboration - within your team and among colleagues and peers outside of your team\nProject management - collaborative “to-do” lists\nPublishing platform - README files and GitHub Pages"
  },
  {
    "objectID": "content/reuse.html",
    "href": "content/reuse.html",
    "title": "Reuse Statement",
    "section": "",
    "text": "This content is released under CC0 Creative Commons.\nPermissive Re-Mix and No Attribution Needed: You may reuse the content in this repository—excluding the NMFS Open Science logo and any NOAA logos—in any way you like. You do not need permission. You do not need to give attribution, but if you use large parts of tutorials or content it is polite to give acknowledgement of the source. Please check each NMFS Open Science repository for its reuse statement. Some of the content is from Carl Boettiger and from NASA Openscapes. This will be noted and you should check the original content for its reuse statement."
  },
  {
    "objectID": "content/intro.html",
    "href": "content/intro.html",
    "title": "Introduction to Git and GitHub",
    "section": "",
    "text": "GitHub is an important platform for many NOAA Fisheries staff and teams to share and collaborate. In 2023, an Authorization To Use for GitHub Enterprise Cloud was signed, which provides a secure, private, access-controlled and managed platform for staff. In 2024, the GitHub Governance Team (GGT) provided a series of workshops to onboard NOAA Fisheries scientists to GitHub Enterprise and provide training in the use of Git and GitHub for NOAA Fisheries. In 2025, NMFS Open Science will be leading a second iteration of these workshops to provide NOAA Fisheries staff with the necessary skills to effectively incorporate Git and GitHub into existing workflows.\nThe GGT has outlined several use cases for why you may want to incorporate Git and GitHub into your workflows:",
    "crumbs": [
      "JupyterHub",
      "Tutorials",
      "Introduction to Git and GitHub"
    ]
  },
  {
    "objectID": "content/intro.html#aims-and-objectives",
    "href": "content/intro.html#aims-and-objectives",
    "title": "Introduction to Git and GitHub",
    "section": "Aims and Objectives",
    "text": "Aims and Objectives\nThis introduction to Git and GitHub virtual workshop will be repeated twice weekly for three weeks. These sessions will use a mixture of directed, interactive lessons and GitHub Skills to provide NOAA Fisheries staff with the knowledge required for basic repository management using Git commands, collaboration, and project management.",
    "crumbs": [
      "JupyterHub",
      "Tutorials",
      "Introduction to Git and GitHub"
    ]
  },
  {
    "objectID": "content/intro.html#prerequisites-what-do-i-need-before-this-workshop-to-follow-along-on-my-own",
    "href": "content/intro.html#prerequisites-what-do-i-need-before-this-workshop-to-follow-along-on-my-own",
    "title": "Introduction to Git and GitHub",
    "section": "Prerequisites: What do I need before this workshop to follow along on my own?",
    "text": "Prerequisites: What do I need before this workshop to follow along on my own?\n\nCreate a GitHub account\nInstall GitHub Desktop - Note that this will also install Git on your machine\nRequest access to NMFS GitHub Enterprise Cloud (NMFS staff and affiliates only)\n\nDownload the NMFS GitHub Enterprise Cloud user agreement\nUse this Google form to request access to Enterprise\nWait for follow-up email and confirm you’re a member (if you see a 404 page you haven’t been added yet)\n\nLog into GitHub and GitHub Desktop using your GitHub account credentials",
    "crumbs": [
      "JupyterHub",
      "Tutorials",
      "Introduction to Git and GitHub"
    ]
  },
  {
    "objectID": "content/intro.html#why-gitgithub",
    "href": "content/intro.html#why-gitgithub",
    "title": "Introduction to Git and GitHub",
    "section": "Why Git/GitHub?",
    "text": "Why Git/GitHub?",
    "crumbs": [
      "JupyterHub",
      "Tutorials",
      "Introduction to Git and GitHub"
    ]
  },
  {
    "objectID": "content/intro.html#github-enterprise",
    "href": "content/intro.html#github-enterprise",
    "title": "Introduction to Git and GitHub",
    "section": "GitHub Enterprise",
    "text": "GitHub Enterprise",
    "crumbs": [
      "JupyterHub",
      "Tutorials",
      "Introduction to Git and GitHub"
    ]
  },
  {
    "objectID": "content/intro.html#git-and-github-the-basics",
    "href": "content/intro.html#git-and-github-the-basics",
    "title": "Introduction to Git and GitHub",
    "section": "Git and GitHub: The basics",
    "text": "Git and GitHub: The basics",
    "crumbs": [
      "JupyterHub",
      "Tutorials",
      "Introduction to Git and GitHub"
    ]
  },
  {
    "objectID": "content/intro.html#introduction-to-github---tutorial",
    "href": "content/intro.html#introduction-to-github---tutorial",
    "title": "Introduction to Git and GitHub",
    "section": "Introduction to GitHub - Tutorial",
    "text": "Introduction to GitHub - Tutorial\nGitHub Skills - Introduction to GitHub\nWe’ll be using the Introduction to GitHub Skills Tutorial to get our feet wet with Git and GitHub. Follow along with the tutorial using your personal GitHub account.\n\nStep 1: Copy the exercise\nOpen the GitHub Skills link, and make sure you are logged into GitHub. Use the “Copy Exercise” button to make a new repository on your account:\n\nWhen you open up the “Copy Exercise” link, you will be presented with the “Create a new repository” interface. Keep all of the defaults, and click the green “Create repository” button: \n\n\n\n\n\n\nGitHub Skills tutorials use GitHub Actions in the background.\n\n\n\nThese actions use “minutes”, which are limited in a private repository, but unlimited in a public one. We suggest keeping your GitHub Skills tutorial repositories public to avoid any minutes limitations.\n\n\n\n\n\n\n\n\nYou’ll notice that most steps in a GitHub Skills tutorial feature a message to wait about 20 seconds for the exercise to update.\n\n\n\nGitHub Actions can take a little bit of time to run, so waiting this requisite time is important! Refresh the instructions after 20 seconds to make sure everything updates properly.\n\n\n\n\nStep 2: Start the exercise\nAfter waiting the suggested 20 seconds, refresh the instructions page. You’ll notice that the “Copy Exercise” button has switched from green to gray, and the “Start Exercise” button has switched from gray to green.\nRight click the “Start Exercise” button and open it in a new tab. This will open an Issue for this repository that will serve as the instructions for the exercise.\n\n\n\n\n\n\n\nI suggest moving the instructions tab into another window so you can work side-by-side with the instructions to limit switching back and forth between tabs. \n\n\n\n\n\n\n\n\nStep 3: Follow the exercise\n\nCreate a new branch\nCreate a new branch following the instructions in the tutorial:\n\n\n\n\n\n\n\nIf you have the instructions open in side-by-side mode, you may notice that the github-actions bot will be producing new comments in the instructions.\n\n\n\nBe sure to wait until the bot is finished before starting the next part of the exercise!\n\n\n\n\nCreate a commit with a new file\nClick the “Add file” button to create a new file named PROFILE.md\n\n\n\n\n\n\n\nIf you’ve arranged your screen in a side-by-side mode, the “Add file” button may look a bit different!\n\n\n\nGitHub dynamically shortens certain buttons and tabs based on the size of the window. In this case, the “Add file” button becomes the “+” button:\n\n\n\nAdd a line to the new file, and click the “Commit changes” green button:\n\nChange the “Commit message” to “Add PROFILE.md” and click “Commit changes” to confirm the commit\n\n\n\nOpen a pull request\nRefresh the repository and click the “Compare & pull request” button.\n\nEdit the title field to read “Add my first file”, and provide a brief description of your pull request. Click “Create pull request”\n\n\n\n\n\n\n\nYou can follow the progress of the GitHub Actions running in the background after this step!\n\n\n\n\n\n\n\n\nMerge the pull request\nClick the green “Merge pull request” button, and confirm the merge. Delete the branch after merging (don’t worry, you can always restore a deleted branch)",
    "crumbs": [
      "JupyterHub",
      "Tutorials",
      "Introduction to Git and GitHub"
    ]
  },
  {
    "objectID": "content/intro.html#working-in-github-desktop---tutorial",
    "href": "content/intro.html#working-in-github-desktop---tutorial",
    "title": "Introduction to Git and GitHub",
    "section": "Working in GitHub Desktop - Tutorial",
    "text": "Working in GitHub Desktop - Tutorial\nTo get a bit more experience working with GitHub repositories, we are going to clone our tutorial repository, create a repository in GitHub Desktop, make a commit, and push our changes up to GitHub.\n\nStep 1: Log into GitHub\nIf this is your first time using GitHub Desktop, you will need to log in to your GitHub account. Open a browser window to GitHub, and make sure you’re logged in to your GitHub account. If you are on the NMFS GitHub Enterprise Cloud, you will also need to be logged in using SSO.\n\n\nStep 2: Open GitHub Desktop and clone a repository\nOn your local computer, open GitHub Desktop. Click “Clone a repository from the Internet…”\n\nClick “Sign in” and “Continue with browser” to open a browser window and sign into GitHub Desktop.\n\n\n\n\n\n\nWhen logging into GitHub Desktop for the first time, you will be presented with a tabbed window as shown below. To access GitHub Enterprise, do not use the Enterprise tab on the login window! This is for a locally-hosted GitHub Enterprise server. The NMFS GitHub Enterprise is cloud-hosted, so to access enterprise repositories from GitHub Desktop, you will need to be logged into the enterprise (via SSO) through your browser.\n\n\n\n\n\n\nEnter the name of the GitHub Skills repository we just finished (skills-introduction-to-github) into the search box. Select the repository, choose where to clone the repository to on your local machine, and click “Clone”.\n\n\n\n\n\n\n\nWhere should you clone your repository to?\n\n\n\nFor transient repositories (i.e., repositories that you only plan to work on briefly or occasionally), I suggest creating a folder on your local file system just for these GitHub repositories. If you’re working on a project and already have a file folder structure for that project, you can clone and/or create your repository inside the existing folder structure.\n\n\n\n\nStep 3: Create a new repository\nClick the dropdown where it says “Current repository” in the upper left corner of GitHub Desktop. This will bring up a list of your repositories available on your local machine. For those who are new to GitHub Desktop, this should only include our GitHub Skills repository. Click the “Add” dropdown menu, and click “Create new repository…”\n\nThere are several aspects of a repository you will need to keep in mind when creating a new one from scratch:\n\nName: Make your name distinct and descriptive, but not too long. Don’t use spaces (remember, this will be included as part of the URL). Git and GitHub repositories often use kebab case.\nDescription:Add a brief description to your repository that describes its purpose\nLocal path: Similarly to when you clone a repository into a folder, you need to tell GitHub Desktop where to start a new repository. This will autofill to the directory you specified when installing GitHub Desktop for the first time, but you are welcome to change it to wherever you want your repository stored on your local computer. You can always move a repository after creation.\nREADME file: It is always a good idea to initialize the repository with a README file. This file will serve as the “front page” of your repository on GitHub. You can add a more detailed description of the repository, what it will be used for, instructions for how it should be used by others, etc. If your repository contains datasets, you can also use the README to add metadata. See this link for more information on README files.\nGit ignore: A .gitignore file tells Git what files and folders to not track. These files will still reside on your local repository, but will not be included in a Commit action or accessible on GitHub. Typically, these files are system files for the coding language or IDE you’re using, but can also include files that you don’t want to be shown on GitHub. This may include things like data files that are too big or too sensitive to be hosted on GitHub, code files that include sensitive material, and scratch or intermediate files. When creating a new repository, you can choose to pre-populate the .gitignore file based on the primary coding language you expect to use most in the repository.\nLicense: Any public-hosted GitHub repository should contain a license for open source use. The latest NOAA recommendation is to use Apache License 2.0\n\nGo ahead and fill in the fields and Create your repository.\n\n\n\nStep 4: Publish your repository to GitHub\nAfter creating your repository, GitHub Desktop will open it automatically. However, at this point your repository is only available on your local machine. Go ahead and click the button to publish your repository to GitHub.\n\nYou can choose whether to keep your repository private or let it be viewed by the public. You can also choose to publish the repo to your personal account, or to an organization (e.g., your center’s Enterprise account). In general, for the sake of open science we normally suggest keeping a repository public unless it contains sensitive or proprietary data. For now, we’ll keep this practice repo public.\n\n\n\nStep 5: Modify the README file in your repository\nYou can now open your repository in an editor or IDE (e.g., RStudio), show the files in a file explorer window, or view the repository on GitHub. We will take advantage of the ability to open the repo in the editor to make a change to our repository’s README file.\nOpen your repository in whatever editor you choose (I have mine configured to use RStudio) by clicking the button in GitHub Desktop.\n\nIn your editor, open the README.md file. You will notice that the README file is prepopulated with the title of your repository as a first-level header and your brief description. Make a change to your README file (maybe change the title and add a bit more context to the description), and save your changes. Close your editing program.\n\n\n\nStep 5: Commit your changes\nIn GitHub Desktop, you will notice that the README.md file has now been added to the “Changed files” list on the left-hand side, and the changes are shown in the main pane as a series of deletions and additions. The check-marks indicate that those changes are staged and should be included in the commit. If you change your mind and don’t want a change to be committed, you can click the check mark and it will change to an “unstaged” state. For now, leave all changes staged.\n\nIn the bottom left, you will see a box for your commit message and a description. These allow you to describe the changes made in a particular commit. A more descriptive message can help others (and future you) to understand why you made a particular change. GitHub Desktop will prepopulate the message field if you’re only modifying one file, but it’s often a good idea to change this to something more descriptive. You can go into more details in the description field if necessary, but this is optional.\nChange your commit file, and commit to the “main” branch.\n\n\n\nStep 6: Push your commit to GitHub\nAfter you commit your changes, GitHub Desktop will prompt you to “Push commits to the origin remote”. This is how we will get our local changes up on GitHub. Click the “Push origin” button.\n\nOpen the repository in GitHub in your browser to see what the changes we made to our README look like on GitHub.",
    "crumbs": [
      "JupyterHub",
      "Tutorials",
      "Introduction to Git and GitHub"
    ]
  },
  {
    "objectID": "content/intro.html#project-management",
    "href": "content/intro.html#project-management",
    "title": "Introduction to Git and GitHub",
    "section": "Project Management",
    "text": "Project Management",
    "crumbs": [
      "JupyterHub",
      "Tutorials",
      "Introduction to Git and GitHub"
    ]
  },
  {
    "objectID": "content/inperson/cb_genetics.html",
    "href": "content/inperson/cb_genetics.html",
    "title": "GitHub Workshop for CB Genetics and Evolution Program",
    "section": "",
    "text": "GitHub is an important platform for many NOAA Fisheries staff and teams to share and collaborate. In 2023, an Authorization To Use for GitHub Enterprise Cloud was signed, which provides a secure, private, access-controlled and managed platform for staff. In 2024, the GitHub Governance Team (GGT) provided a series of workshops to onboard NOAA Fisheries scientists to GitHub Enterprise and provide training in the use of Git and GitHub for NOAA Fisheries. In 2025, NMFS Open Science will be leading a second iteration of these workshops to provide NOAA Fisheries staff with the necessary skills to effectively incorporate Git and GitHub into existing workflows.\nThe GGT has outlined several use cases for why you may want to incorporate Git and GitHub into your workflows:",
    "crumbs": [
      "JupyterHub",
      "In-Person Workshops",
      "GitHub Workshop for CB Genetics and Evolution Program"
    ]
  },
  {
    "objectID": "content/inperson/cb_genetics.html#aims-and-objectives",
    "href": "content/inperson/cb_genetics.html#aims-and-objectives",
    "title": "GitHub Workshop for CB Genetics and Evolution Program",
    "section": "Aims and Objectives",
    "text": "Aims and Objectives\nThis sessions will use a mixture of directed, interactive lessons and GitHub Skills to provide NOAA Fisheries staff within the Conservation Biology Genetics and Evolution Program with the knowledge required for basic repository management using Git commands, collaboration, and project management, as well as dedicated time to put these skills to use in setting up an existing project or workflow with Git and GitHub.",
    "crumbs": [
      "JupyterHub",
      "In-Person Workshops",
      "GitHub Workshop for CB Genetics and Evolution Program"
    ]
  },
  {
    "objectID": "content/inperson/cb_genetics.html#agenda",
    "href": "content/inperson/cb_genetics.html#agenda",
    "title": "GitHub Workshop for CB Genetics and Evolution Program",
    "section": "Agenda",
    "text": "Agenda\n\n10:00-10:10 Why Git/GitHub?\n10:10-10:20 GitHub Enterprise\n10:20-10:50 Introduction to GitHub - Tutorial\n10:50-11:30 Pull Requests and Collaboration - Tutorial\n11:30-11:45 Break\n11:45-12:15 Project Management\n12:15-13:00 Putting Everything Together",
    "crumbs": [
      "JupyterHub",
      "In-Person Workshops",
      "GitHub Workshop for CB Genetics and Evolution Program"
    ]
  },
  {
    "objectID": "content/inperson/cb_genetics.html#why-gitgithub",
    "href": "content/inperson/cb_genetics.html#why-gitgithub",
    "title": "GitHub Workshop for CB Genetics and Evolution Program",
    "section": "Why Git/GitHub?",
    "text": "Why Git/GitHub?",
    "crumbs": [
      "JupyterHub",
      "In-Person Workshops",
      "GitHub Workshop for CB Genetics and Evolution Program"
    ]
  },
  {
    "objectID": "content/inperson/cb_genetics.html#github-enterprise",
    "href": "content/inperson/cb_genetics.html#github-enterprise",
    "title": "GitHub Workshop for CB Genetics and Evolution Program",
    "section": "GitHub Enterprise",
    "text": "GitHub Enterprise",
    "crumbs": [
      "JupyterHub",
      "In-Person Workshops",
      "GitHub Workshop for CB Genetics and Evolution Program"
    ]
  },
  {
    "objectID": "content/inperson/cb_genetics.html#introduction-to-github---tutorial",
    "href": "content/inperson/cb_genetics.html#introduction-to-github---tutorial",
    "title": "GitHub Workshop for CB Genetics and Evolution Program",
    "section": "Introduction to GitHub - Tutorial",
    "text": "Introduction to GitHub - Tutorial\nGitHub Skills - Introduction to GitHub",
    "crumbs": [
      "JupyterHub",
      "In-Person Workshops",
      "GitHub Workshop for CB Genetics and Evolution Program"
    ]
  },
  {
    "objectID": "content/inperson/cb_genetics.html#pull-requests-and-collaboration---tutorial",
    "href": "content/inperson/cb_genetics.html#pull-requests-and-collaboration---tutorial",
    "title": "GitHub Workshop for CB Genetics and Evolution Program",
    "section": "Pull Requests and Collaboration - Tutorial",
    "text": "Pull Requests and Collaboration - Tutorial\nGitHub Skills - Review Pull Requests\nGitHub Skills - Resolve Merge Conflicts",
    "crumbs": [
      "JupyterHub",
      "In-Person Workshops",
      "GitHub Workshop for CB Genetics and Evolution Program"
    ]
  },
  {
    "objectID": "content/inperson/cb_genetics.html#project-management",
    "href": "content/inperson/cb_genetics.html#project-management",
    "title": "GitHub Workshop for CB Genetics and Evolution Program",
    "section": "Project Management",
    "text": "Project Management",
    "crumbs": [
      "JupyterHub",
      "In-Person Workshops",
      "GitHub Workshop for CB Genetics and Evolution Program"
    ]
  },
  {
    "objectID": "content/inperson/cb_genetics.html#putting-everything-together",
    "href": "content/inperson/cb_genetics.html#putting-everything-together",
    "title": "GitHub Workshop for CB Genetics and Evolution Program",
    "section": "Putting Everything Together",
    "text": "Putting Everything Together",
    "crumbs": [
      "JupyterHub",
      "In-Person Workshops",
      "GitHub Workshop for CB Genetics and Evolution Program"
    ]
  },
  {
    "objectID": "content/ghec.html#what-is-github-enterprise",
    "href": "content/ghec.html#what-is-github-enterprise",
    "title": "Intro to GitHub Enterprise",
    "section": "What is GitHub Enterprise?",
    "text": "What is GitHub Enterprise?\n\nAn account with GitHub organizations (orgs) that has more controls than GitHub Free.\nYour personal GitHub account can have repos in GitHub Free orgs or GitHub Enterprise orgs.\nYour identity (username) does not change – as long as your user account uses your noaa.gov email."
  },
  {
    "objectID": "content/ghec.html#how-is-github-enterprise-different",
    "href": "content/ghec.html#how-is-github-enterprise-different",
    "title": "Intro to GitHub Enterprise",
    "section": "How is GitHub Enterprise different?",
    "text": "How is GitHub Enterprise different?\n\nIt is controlled by work and has more rules\nIt requires CAC sign-in - more secure\nIt requires a license.\nOutside (non NOAA) collaborators have to be added by an admin to repos. They use a license if the repo is private or internal"
  },
  {
    "objectID": "content/ghec.html#how-is-github-enterprise-different-1",
    "href": "content/ghec.html#how-is-github-enterprise-different-1",
    "title": "Intro to GitHub Enterprise",
    "section": "How is GitHub Enterprise different?",
    "text": "How is GitHub Enterprise different?\n\nGitHub 3rd party applications require approval\nIt has more features: private and internal GitHub Pages, more GitHub Action minutes, bigger files allowed.\nAllows internal repositories only visible to NMFS GitHub users across GHEC. See code from other science centers (if they made it internal)\nCollaborate on repos with any other NMFS GHEC org. You can be on orgs at other centers"
  },
  {
    "objectID": "content/ghec.html#how-is-github-enterprise-different-2",
    "href": "content/ghec.html#how-is-github-enterprise-different-2",
    "title": "Intro to GitHub Enterprise",
    "section": "How is GitHub Enterprise different?",
    "text": "How is GitHub Enterprise different?\n\nHas IT managed automatic backups.\nNMFS doesn’t lose code due to repo owner leaving NOAA\nFedRAMP approved unlike GitHub free"
  },
  {
    "objectID": "content/ghec.html#how-is-github-enterprise-not-different",
    "href": "content/ghec.html#how-is-github-enterprise-not-different",
    "title": "Intro to GitHub Enterprise",
    "section": "How is GitHub Enterprise not different?",
    "text": "How is GitHub Enterprise not different?\n\nYou can create repos just like in GitHub Free\nYou have access to the usual collaboration tools: projects, GitHub Actions, GitHub Pages\nYou are admin on your own repos and can admin them as usual…except re outside collaborators."
  },
  {
    "objectID": "coc.html",
    "href": "coc.html",
    "title": "Code of Conduct",
    "section": "",
    "text": "We are dedicated to providing a harassment-free learning experience for everyone. We do not tolerate harassment of participants in any form. Sexual language and imagery is not appropriate either in-person or virtual form, including the Discussion boards and Chats. Participants (including event volunteers and organizers) violating these rules may be sanctioned or expelled from the event at the discretion of the organizers.",
    "crumbs": [
      "JupyterHub",
      "Welcome",
      "Code of Conduct"
    ]
  },
  {
    "objectID": "coc.html#definition-of-harassment",
    "href": "coc.html#definition-of-harassment",
    "title": "Code of Conduct",
    "section": "Definition of Harassment",
    "text": "Definition of Harassment\nHarassment includes, but is not limited to:\n\nVerbal comments that harass based on sexual orientation, disability, physical appearance, body size, race, age, religion.\nSexual images in public spaces\nDeliberate intimidation, stalking, or following\nHarassing photography or recording\nSustained disruption of talks or other events\nInappropriate physical contact\nUnwelcome sexual attention\nAdvocating for, or encouraging, any of the above behavior",
    "crumbs": [
      "JupyterHub",
      "Welcome",
      "Code of Conduct"
    ]
  },
  {
    "objectID": "coc.html#expectations",
    "href": "coc.html#expectations",
    "title": "Code of Conduct",
    "section": "Expectations",
    "text": "Expectations\nParticipants asked to stop any harassing behavior are expected to comply immediately. If a participant engages in harassing behavior, the organizers retain the right to take any actions to keep the event a welcoming environment for all participants. This includes warning the offender or expulsion from the event.\nThe organizers may take action to redress anything designed to, or with the clear impact of, disrupting the event or making the environment hostile for any participants. We expect participants to follow these rules at all the event venues and event-related social activities.",
    "crumbs": [
      "JupyterHub",
      "Welcome",
      "Code of Conduct"
    ]
  },
  {
    "objectID": "coc.html#reporting-a-violation",
    "href": "coc.html#reporting-a-violation",
    "title": "Code of Conduct",
    "section": "Reporting a violation",
    "text": "Reporting a violation\nHarassment and other code of conduct violations reduce the value of the event for everyone. If someone makes you or anyone else feel unsafe or unwelcome, please report it as soon as possible.\nIf you feel comfortable contacting someone associated with our event, you may speak with one of the event organizers in person or contact an organizer on a private channel.",
    "crumbs": [
      "JupyterHub",
      "Welcome",
      "Code of Conduct"
    ]
  },
  {
    "objectID": "content/git_basics.html#users-organizations-and-teams",
    "href": "content/git_basics.html#users-organizations-and-teams",
    "title": "Git and GitHub: The Basics",
    "section": "Users, organizations, and teams",
    "text": "Users, organizations, and teams\n\n\n\n\n \n\n\n\n\nUsers\n\nYour account\nConnected to your NOAA email\nCan add secondary email"
  },
  {
    "objectID": "content/git_basics.html#users-organizations-and-teams-1",
    "href": "content/git_basics.html#users-organizations-and-teams-1",
    "title": "Git and GitHub: The Basics",
    "section": "Users, organizations, and teams",
    "text": "Users, organizations, and teams\n\n\n\n\n \n\n\n\n\nOrganizations\n\nShared account with large number of people\nCan be housed under Enterprise\nCollaboration and controlled access"
  },
  {
    "objectID": "content/git_basics.html#users-organizations-and-teams-2",
    "href": "content/git_basics.html#users-organizations-and-teams-2",
    "title": "Git and GitHub: The Basics",
    "section": "Users, organizations, and teams",
    "text": "Users, organizations, and teams\n\n\n\n\n \n\n\n\n\nTeams\n\nNested within organization\nSub-groups for collaboration and access\nCan have teams within teams for more fine-scale structure"
  },
  {
    "objectID": "content/git_basics.html#repositories---the-main-unit",
    "href": "content/git_basics.html#repositories---the-main-unit",
    "title": "Git and GitHub: The Basics",
    "section": "Repositories - the main unit",
    "text": "Repositories - the main unit\n\n\n\nSets the folder and file structure\nContained and permissioned\nPublic, private, or internal (Enterprise)\nCommits and issues - Contributing through GitHub"
  },
  {
    "objectID": "content/git_basics.html#commit",
    "href": "content/git_basics.html#commit",
    "title": "Git and GitHub: The Basics",
    "section": "Commit",
    "text": "Commit\n\n\n\nA specific “thing” that you want to save and keep a record for\nSnapshot of all the files in the entire project\nCommit messages provide info about the “thing” you’ve done\nCommits give a history of the project"
  },
  {
    "objectID": "content/git_basics.html#cloning",
    "href": "content/git_basics.html#cloning",
    "title": "Git and GitHub: The Basics",
    "section": "Cloning",
    "text": "Cloning\n\n\n\nMaking a local copy from GitHub\nAllows local sync within and across devices\nPush local changes, fetch remote changes\n\n\n\n\n\nImage credit: https://jaisriram.hashnode.dev/how-to-clone-a-github-repository-to-local-machine"
  },
  {
    "objectID": "content/git_basics.html#forking",
    "href": "content/git_basics.html#forking",
    "title": "Git and GitHub: The Basics",
    "section": "Forking",
    "text": "Forking\n\n\n\nAdding to or modifying repository hosted on someone else’s account\n“Sees” changes from parent repo - allows syncing with parent\nCan be for personal purposes - doesn’t have to be pushed to original repo!\n\n\n\n\n\nImage credit: https://www.earthdatascience.org/workshops/intro-version-control-git/pull-request/"
  },
  {
    "objectID": "content/git_basics.html#importing",
    "href": "content/git_basics.html#importing",
    "title": "Git and GitHub: The Basics",
    "section": "Importing",
    "text": "Importing\n\n\n\nUse another repo as starting point for your own\nCopy not connected to original\nUsually meant for importing from a different version control system (e.g., GitLab)\n\nCan be employed to use another GitHub repo as a “pseudo-template”"
  },
  {
    "objectID": "content/git_basics.html#branching",
    "href": "content/git_basics.html#branching",
    "title": "Git and GitHub: The Basics",
    "section": "Branching",
    "text": "Branching\n\nCopies of repos housed within the repo structure\nAllow for working on repo without changing main branch\nCan help for more complex collaboration"
  },
  {
    "objectID": "content/inperson/guided_exercise.html#practice-creating-a-repository-for-your-own-project",
    "href": "content/inperson/guided_exercise.html#practice-creating-a-repository-for-your-own-project",
    "title": "Putting Everything Together",
    "section": "Practice creating a repository for your own project",
    "text": "Practice creating a repository for your own project\n\nOpen GitHub Desktop\nLogin with your GitHub account (if you have not already done so)\nCreate a new repository\nMove your code and other project files into your new repository\nMake a commit with your initial files\nPush your commit up to GitHub"
  },
  {
    "objectID": "content/inperson/guided_exercise.html#practice-creating-a-repository-for-your-own-project-1",
    "href": "content/inperson/guided_exercise.html#practice-creating-a-repository-for-your-own-project-1",
    "title": "Putting Everything Together",
    "section": "Practice creating a repository for your own project",
    "text": "Practice creating a repository for your own project\n\nOpen the repository in your browser\nAdd your teammates as collaborators\nCreate an issue and tag a teammate\nMake a change to the README and commit in a new branch\nCreate a pull request\nMerge the pull request into your main branch"
  },
  {
    "objectID": "content/project_management.html#why-use-github-for-project-management",
    "href": "content/project_management.html#why-use-github-for-project-management",
    "title": "GitHub for Project Management",
    "section": "Why use GitHub for project management?",
    "text": "Why use GitHub for project management?\n\n\n\nIssues and projects stoke collaboration\nIssues act as short-term to-do lists\nProjects capture longer-term goals and organize short-term issues\n\n\n\n\n\nhttps://albertobasalo.medium.com/project-management-with-github-issues-and-projects-cb8eb6da966f"
  },
  {
    "objectID": "content/project_management.html#issues",
    "href": "content/project_management.html#issues",
    "title": "GitHub for Project Management",
    "section": "Issues",
    "text": "Issues\n\n\n\nTasks for things to do\nPlace to provide detail\nChecklists, labels, tags\nAssign to collaborators"
  },
  {
    "objectID": "content/project_management.html#projects",
    "href": "content/project_management.html#projects",
    "title": "GitHub for Project Management",
    "section": "Projects",
    "text": "Projects\n\n\n\nGroup issues to view everything together\nWork across repositories\nShow progress by collaborators"
  },
  {
    "objectID": "content/setup.html#setting-up-git-and-github",
    "href": "content/setup.html#setting-up-git-and-github",
    "title": "Setup",
    "section": "Setting up Git and GitHub",
    "text": "Setting up Git and GitHub\n\nCreate a GitHub account\nInstall GitHub Desktop - Note that this will also install Git on your machine\nRequest access to NMFS GitHub Enterprise Cloud (NMFS staff and affiliates only)\n\nDownload the NMFS GitHub Enterprise Cloud user agreement\nUse this Google form to request access to Enterprise\nWait for follow-up email and confirm you’re a member (if you see a 404 page you haven’t been added yet)\n\nLog into GitHub and GitHub Desktop using your GitHub account credentials",
    "crumbs": [
      "JupyterHub",
      "Welcome",
      "Setup"
    ]
  },
  {
    "objectID": "content/setup.html#signing-up-for-github-enterprise-cloud-ghec",
    "href": "content/setup.html#signing-up-for-github-enterprise-cloud-ghec",
    "title": "Setup",
    "section": "Signing up for GitHub Enterprise Cloud (GHEC)",
    "text": "Signing up for GitHub Enterprise Cloud (GHEC)\n\nFollow the instructions on the GGT website to request access.\nWait to be invited to GHEC and accept\nThen you can sign in to an org like https://github.com/noaa-nwfsc with CAC or password+authentication",
    "crumbs": [
      "JupyterHub",
      "Welcome",
      "Setup"
    ]
  },
  {
    "objectID": "content/setup.html#authenticating-to-ghec",
    "href": "content/setup.html#authenticating-to-ghec",
    "title": "Setup",
    "section": "Authenticating to GHEC",
    "text": "Authenticating to GHEC\n\nUsing GitHub Desktop\n\nGo to GitHub Desktop &gt; Settings &gt; Accounts\nSign into GitHub.com. Ignore GitHub Enterprise!!\nDONE!",
    "crumbs": [
      "JupyterHub",
      "Welcome",
      "Setup"
    ]
  },
  {
    "objectID": "content/setup.html#authenticating-to-ghec-1",
    "href": "content/setup.html#authenticating-to-ghec-1",
    "title": "Setup",
    "section": "Authenticating to GHEC",
    "text": "Authenticating to GHEC\n\nUsing GitHub Desktop\n\nHelp! I signed up for GitHub Enterprise and GitHub Desktop will not authenticate!! Log out of GitHub Desktop under GitHub Desktop &gt; Settings (or Options) &gt; Account and log back in.",
    "crumbs": [
      "JupyterHub",
      "Welcome",
      "Setup"
    ]
  },
  {
    "objectID": "content/setup.html#authenticating-to-ghec-using-rstudio",
    "href": "content/setup.html#authenticating-to-ghec-using-rstudio",
    "title": "Setup",
    "section": "Authenticating to GHEC: Using RStudio",
    "text": "Authenticating to GHEC: Using RStudio\n\nTell RStudio about Git\n\nIn RStudio, Tools &gt; Terminal &gt; New Terminal\nAt the command line (in the new terminal), type which git if on a Mac and where git if in Windows.\nCopy that path.\nIn RStudio, Tools &gt; Global Options &gt; Git/SVN There is a box at top that asks for the location of the Git binary.\nPaste that path in.",
    "crumbs": [
      "JupyterHub",
      "Welcome",
      "Setup"
    ]
  },
  {
    "objectID": "content/setup.html#authenticating-to-ghec-using-rstudio-1",
    "href": "content/setup.html#authenticating-to-ghec-using-rstudio-1",
    "title": "Setup",
    "section": "Authenticating to GHEC: Using RStudio",
    "text": "Authenticating to GHEC: Using RStudio\nYou have to authenticate to GitHub separately for RStudio even if you are signed in on GitHub Desktop.\nIf you see anything like this, you have not authenticated.",
    "crumbs": [
      "JupyterHub",
      "Welcome",
      "Setup"
    ]
  },
  {
    "objectID": "content/setup.html#authenticating-to-ghec-using-rstudio-2",
    "href": "content/setup.html#authenticating-to-ghec-using-rstudio-2",
    "title": "Setup",
    "section": "Authenticating to GHEC: Using RStudio",
    "text": "Authenticating to GHEC: Using RStudio\n\nSet up\n\nInstall usethis R package\nRun this code:\n\nusethis::use_git_config(user.name = \"your username\", user.email = \"you@noaa.gov\")",
    "crumbs": [
      "JupyterHub",
      "Welcome",
      "Setup"
    ]
  },
  {
    "objectID": "content/setup.html#authenticating-to-ghec-using-rstudio-3",
    "href": "content/setup.html#authenticating-to-ghec-using-rstudio-3",
    "title": "Setup",
    "section": "Authenticating to GHEC: Using RStudio",
    "text": "Authenticating to GHEC: Using RStudio\n\nCreate Token\nusethis::create_github_token(   scopes = c(\"repo\", \"workflow\"),   description = \"DESCRIBE THE TOKEN'S USE CASE\",   host = NULL )",
    "crumbs": [
      "JupyterHub",
      "Welcome",
      "Setup"
    ]
  },
  {
    "objectID": "content/setup.html#authenticating-to-ghec-using-rstudio-4",
    "href": "content/setup.html#authenticating-to-ghec-using-rstudio-4",
    "title": "Setup",
    "section": "Authenticating to GHEC: Using RStudio",
    "text": "Authenticating to GHEC: Using RStudio\n\nCreate Token\n\nSet the date when the token will expire.\nScroll to bottom and click “Generate token”\nCopy the long PAT.",
    "crumbs": [
      "JupyterHub",
      "Welcome",
      "Setup"
    ]
  },
  {
    "objectID": "content/setup.html#authenticating-to-ghec-using-rstudio-5",
    "href": "content/setup.html#authenticating-to-ghec-using-rstudio-5",
    "title": "Setup",
    "section": "Authenticating to GHEC: Using RStudio",
    "text": "Authenticating to GHEC: Using RStudio\n\nConfigure PAT for GHEC\n\nNext to the PAT, you will see “Configure for SSO”.\nClick that and authenticate to your GHEC org",
    "crumbs": [
      "JupyterHub",
      "Welcome",
      "Setup"
    ]
  },
  {
    "objectID": "content/setup.html#authenticating-to-ghec-using-rstudio-6",
    "href": "content/setup.html#authenticating-to-ghec-using-rstudio-6",
    "title": "Setup",
    "section": "Authenticating to GHEC: Using RStudio",
    "text": "Authenticating to GHEC: Using RStudio\n\nTell RSTudio about the PAT\nRun this code.\ncredentials::set_github_pat(\"THE LONG PAT)",
    "crumbs": [
      "JupyterHub",
      "Welcome",
      "Setup"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "NOAA Fisheries GitHub Clinic",
    "section": "",
    "text": "GitHub is an important platform for many NOAA Fisheries staff and teams to share and collaborate. In 2023, an Authorization To Use for GitHub Enterprise Cloud was signed, which provides a secure, private, access-controlled and managed platform for staff. In 2024, the GitHub Governance Team (GGT) provided a series of workshops to onboard NOAA Fisheries scientists to GitHub Enterprise and provide training in the use of Git and GitHub for NOAA Fisheries. In 2025, NMFS Open Science will be leading a second iteration of these workshops to provide NOAA Fisheries staff with the necessary skills to effectively incorporate Git and GitHub into existing workflows.\nThe GGT has outlined several use cases for why you may want to incorporate Git and GitHub into your workflows:",
    "crumbs": [
      "JupyterHub",
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#aims-and-objectives-of-the-github-clinic",
    "href": "index.html#aims-and-objectives-of-the-github-clinic",
    "title": "NOAA Fisheries GitHub Clinic",
    "section": "Aims and Objectives of the GitHub Clinic",
    "text": "Aims and Objectives of the GitHub Clinic\nThe GitHub Clinic will consist of several components:\n\nAn introductory 2-hour introduction to Git and GitHub virtual workshop, repeated twice weekly for three weeks. These sessions will use a mixture of directed, interactive lessons and GitHub Skills to provide NOAA Fisheries staff with the knowledge required for basic repository management using Git commands, collaboration, and project management\nA series of 1-hour standalone skills workshops for deeper dives into several GitHub features including advanced branch management, Git workflows, GitHub pages, and forking\nOpen Science Office Hours for individual help and coaching\n\n\nSchedule\nSee the schedule page.\n\nIntro workshops will be given Mondays at 10am PT/1pm ET and Tuesdays at 1pm PT/4pm ET for 3 weeks starting April 7th\n\nThese are 2 hour introductory sessions to get you started with Git and GitHub\nIntro sessions are identical; attend any that works for your schedule, or repeat sessions if you want to see the material twice\n\nSkills workshops will be given\nSee the NMFS Open Science Training Page for the training calendar or add the NMFS Open Science calendar to your calendar to see all events.",
    "crumbs": [
      "JupyterHub",
      "Welcome"
    ]
  }
]