---
title: "Introduction to Markdown and README files"
---

## Aims and Objectives

Markdown is a lightweight markup language that you can use to add formatting elements to plain-text text documents. GitHub uses markdown for a variety of applications across repositories and projects, including for README files, issues, discussions, commit messages, and comments. This Introduction to Markdown skills session will use a a mixture of directed, interactive lessons and GitHub Skills to provide NOAA Fisheries staff with a foundation in markdown language formatting and editing.

## Prerequisites: What do I need before this workshop to follow along on my own?

This stand-alone skills session is meant for those with a basic understanding of Git and GitHub. Check out our [Introduction to Git and GitHub](intro.qmd) lessons if you are new to Git and GitHub or need a refresher.

## What is Markdown?

<iframe class="slide-deck" src="../slides/markdown.html" width="900" height="600">

</iframe>

## Using Markdown in GitHub - Tutorial

[GitHub Skills: Communicate using markdown](https://github.com/skills/communicate-using-markdown)

We'll be using the Introduction to GitHub Skills Tutorial to get some practice with markdown in GitHub. Follow along with the tutorial using your own GitHub account.

### Step 1: Copy the exercise

Open the GitHub Skills link, and make sure you are logged into GitHub. Use the "Start Course" button to make a new repository on your account:

![](images/paste-64.png)When you open up the "Copy Exercise" link, you will be presented with the "Create a new repository" interface. Keep all of the defaults, and click the green "Create repository" button:

![](images/paste-65.png)

::: callout-important
## GitHub Skills tutorials use GitHub Actions in the background.

These actions use "minutes", which are limited in a private repository, but unlimited in a public one. We suggest keeping your GitHub Skills tutorial repositories public to avoid any minutes limitations.
:::

::: callout-tip
## You'll notice that most steps in a GitHub Skills tutorial feature a message to wait about 20 seconds for the exercise to update.

GitHub Actions can take a little bit of time to run, so waiting this requisite time is important! Refresh the instructions after 20 seconds to make sure everything updates properly.
:::

### Step 2: Start the exercise

After waiting the suggested 20 seconds, refresh the instructions page. You'll notice that the README output has changed to show the steps for the tutorial:

![](images/paste-66.png)

::: callout-tip
## I suggest moving the instructions tab into another window so you can work side-by-side with the instructions to limit switching back and forth between tabs. ![](images/paste-67.png)
:::

### Step 3: Follow the exercise

#### Open a pull request

Create a new pull request following the instructions in the tutorial: ![](images/paste-68.png)

Open a new window and navigate to the Pull Requests tab in GitHub, then click the green New button to open a new Pull Request:

![](images/paste-69.png)

Click the "compare" dropdown and select "start-markdown"

![](images/paste-70.png)

Make sure the green "Able to merge" message shows, and click "Create pull request", then "Create pull request" again.

![](images/paste-71.png)

Navigate to the "Files changed" tab after the pull request has been created

![](images/paste-72.png)

Scroll to the bottom of the page to the `index.md` file, click the three dots, and select "Edit file"

![](images/paste-73.png)

Add a first-level header by entering `#` followed by a space in the Edit textbox. You can play around with adding other levels of headers.

![](images/paste-74.png)

Click the "Preview" button above the dialogue box to see what your headers will look like in your file.

![](images/paste-75.png)

Click the "Commit changes" button at the top of your file (note that this is different from the instructions from GitHub Skills). Add a meaningful message, and click the Commit changes button.

![Wait 20 seconds for GitHub Actions to run in the background, then refresh the instructions page.](images/paste-76.png)

#### Add an image

When you committed the changes, GitHub should have taken you back to the bottom of the "Files changed" page. If not, navigate to this pane and scroll to the bottom, click the three dots, and click the "Edit file" option again.

![](images/paste-77.png)

In the file, add a markdown image. For this example, we can use our [SCUBAtocat](https://octodex.github.com/images/scubatocat.png).

![](images/paste-78.png)

Click the Preview tab to check your Markdown formatting ![](images/paste-79.png)

Commit your changes, and wait another 20 seconds for GitHub actions to update to the next step.

![](images/paste-80.png)

#### Add a code example

Edit the index.md file again.

![](images/paste-81.png)

Add some code in a code block (you can use either example in the instructions)

![](images/paste-82.png)

Preview your code block.

![](images/paste-86.png)

Commit your changes to the file, and wait another 20 seconds before refreshing the instructions page.

![](images/paste-83.png)

#### Add a task list

Edit the index.md file again.

![](images/paste-84.png)

Make a markdown task list using the `- []` notation

![](images/paste-85.png)

Preview your task list.

![](images/paste-87.png)

Commit your changes to the file, and wait another 20 seconds before refreshing the instructions page.

![](images/paste-88.png)

#### Merge the pull request

Click the Conversation tab in your pull request

![](images/paste-89.png)

Scroll to the bottom of the page, click "Merge pull request", and confirm the merge. Wait 20 more seconds, then refresh the instructions page to finish the course. ![](images/paste-90.png)

![](images/paste-91.png)

## What about README files?

All of the things we did in this tutorial can be done in a README file! To illustrate this, we can copy the contents of your index.md file over to your README.md file in your Skills repository:

![](images/paste-92.png)

![![](images/paste-94.png)](images/paste-93.png)

![](images/paste-95.png)